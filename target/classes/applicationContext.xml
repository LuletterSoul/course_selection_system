<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
          destroy-method="close"><!-- 设置为close使Spring容器关闭同时数据源能够正常关闭，以免造成连接泄露 -->
        <property name="driverClass" value="com.mysql.jdbc.Driver" />
        <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/selection_course_system_db?useUnicode=true&amp;characterEncoding=UTF8&amp;useSSL=true"/>
        <property name="user" value="root" />
        <property name="password" value="15298382837LIU" />
        <property name="initialPoolSize" value="5" /><!-- 在启动连接池初始创建的数据库连接，默认为0 -->
        <property name="maxPoolSize" value="40" /><!-- 设置数据库同一时间的最大活跃连接默认为8，负数表示不闲置 -->
        <property name="minPoolSize" value="2"/><!-- 在连接池空闲时的最大连接数，超过的会被释放，默认为8，负数表示不闲置 -->
        <property name="maxConnectionAge" value="10000" /><!-- 连接被用完时等待归还的最大等待时间，单位毫秒，超出时间抛异常，默认为无限等待 -->
    </bean>

    <context:component-scan base-package="org.app"></context:component-scan>
    <context:component-scan base-package="test.org.app.service"></context:component-scan>
    <!-- 配置我们的回话工厂-->
    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource">
            <ref bean="dataSource" />
        </property>
        <property name="annotatedClasses">
            <list>
                <value>org.app.entity.Student</value>
                <value>org.app.entity.Teacher</value>
                <value>org.app.entity.Address</value>
                <value>org.app.entity.Department</value>
                <value>org.app.entity.Profession</value>
                <value>org.app.entity.Phone</value>
                <value>org.app.entity.Course</value>
                <value>org.app.entity.CourseArrangementInfo</value>
                <value>org.app.entity.CourseSelectionInfo</value>
                <value>org.app.entity.TeachingBuilding</value>
                <value>org.app.entity.Classroom</value>
                <value>org.app.entity.Schedule</value>
                <value>org.app.entity.AdministrationClass</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
                <prop key="javax.persistence.validation.mode">none</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="current_session_context_class">org.springframework.orm.hibernate5.SpringSessionContext</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.jdbc.fetch_size">25</prop>
                <prop key="hibernate.jdbc.batch_size">50</prop>
                <prop key="hibernate.order_inserts">true</prop>
                <prop key="hibernate.order_updates">true</prop>
                <prop key="hibernate.connection.url">jdbc:mysql://localhost:3306/selection_course_system_db</prop>
                <prop key="hibernate.connection.driver_class">com.mysql.jdbc.Driver</prop>
                <!--<prop key="connection.autocommit">true</prop>-->
            </props>
        </property>
    </bean>

    <bean class="org.app.util.SpringMetaDataBuilder"/>

    <bean id="studentRepository" class="org.app.dao.repository.StudentRepository"
          p:sessionFactory-ref="sessionFactory"/>

    <bean id="studentService" class="org.app.service.StudentService" p:studentRepository-ref="studentRepository"/>
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
        <property name="dataSource" ref="dataSource" />
    </bean>

    <aop:config proxy-target-class="true">
        <aop:pointcut id="servicePointCut"
                      expression="execution(* org.app.service.*.*(..))" />
        <aop:advisor advice-ref="transactionAdvice"  pointcut-ref="servicePointCut"/>
    </aop:config>

    <!--<aop:config proxy-target-class="true">-->
        <!--<aop:pointcut id="testPointCut"-->
                      <!--expression="execution(* test.org.app.*.*(..))" />-->
        <!--<aop:advisor advice-ref="transactionAdvice"  pointcut-ref="testPointCut"/>-->
    <!--</aop:config>-->

    <tx:advice id="transactionAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="test*" propagation="REQUIRED"/>
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="delete*" propagation="REQUIRED"/>
            <tx:method name="batchSave*" propagation="REQUIRED"/>
            <tx:method name="batchDelete*" propagation="REQUIRED"/>
            <tx:method name="get*" propagation="REQUIRED" />
            <tx:method name="find*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="list*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="query*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="page*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>


</beans>